{"ts":1378407204559,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1378407603270,"patch":[[{"diffs":[[1,"module.exports = function insertNewExcersize() {\n    var sqlite3 = require('sqlite3').verbose();\n    var db = new sqlite3.Database('../data/practiceLog.db');\n}\n\nmodule.exports = function getAllExersizes() {\n    db.each(\"SELECT rowid AS id, info FROM lorem \", function(err, row) {\n          console.log(row.id + \": \" + row.info);\n}"]],"start1":0,"start2":0,"length1":0,"length2":330}]],"length":330,"saved":false}
{"ts":1378407631721,"patch":[[{"diffs":[[-1,"module.exports = function insertNewExcersize() {\n    "],[0,"var "]],"start1":0,"start2":0,"length1":57,"length2":4},{"diffs":[[0,"bose();\n"],[-1,"    "],[0,"var db ="]],"start1":36,"start2":36,"length1":20,"length2":16},{"diffs":[[0,"g.db');\n"],[1,"\n\n\nmodule.exports = function insertNewExcersize() {"],[0,"}\n\nmodul"]],"start1":93,"start2":93,"length1":16,"length2":67},{"diffs":[[0," row) {\n"],[-1,"  "],[0,"        "]],"start1":266,"start2":266,"length1":18,"length2":16},{"diffs":[[0,".info);\n"],[1,"    "],[0,"}"]],"start1":313,"start2":313,"length1":9,"length2":13}]],"length":326,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378557529972,"patch":[[{"diffs":[[-1,"var sqlite3 = require('sqlite3').verbose();\nvar db = new sqlite3.Database('../data/practiceLog.db');\n\n\n\nmodule.exports = function insertNew"],[1,"//table names\nvar tables = {\n    exercises: \"exercises\"\n};\n\nvar connectionPool = require(\"./connectionPool\");\n\n//How should I pass options to a node module? from http://stackoverflow.com/a/6366131/532517\nmodule.exports = function(dbName) {\n    var db = connectionPool.pool(dbName);\n    \n    return {\n        insert"],[0,"Ex"],[-1,"c"],[0,"er"],[-1,"size() {}\n\nmodule.exports = function getAllExersizes() {\n"],[1,"cise: function() {\n            //TODO replace with real logic\n        },\n\n        deleteExercise: function() {\n            //TODO replace with real logic\n        },\n\n        switchExerciseStateForDate: function() {\n            //TODO replace with real logic\n        },\n        \n        getExercise: function(name) {\n            //TODO replace with real logic\n        },\n        \n        getAllExercises: function() {\n        "],[0,"    "]],"start1":0,"start2":0,"length1":205,"length2":747},{"diffs":[[0,"id, "],[-1,"info"],[1,"*"],[0," FROM "],[-1,"lorem \""],[1,"\" + tables.exercises"],[0,", fu"]],"start1":772,"start2":772,"length1":25,"length2":35},{"diffs":[[0,"err, row) {\n"],[1,"        "],[0,"        cons"]],"start1":814,"start2":814,"length1":24,"length2":32},{"diffs":[[0,"w.info);"],[-1,"\n    "],[1," //TODO replace with real logic\n            })\n        }\n    }\n"],[0,"}"]],"start1":872,"start2":872,"length1":14,"length2":72}]],"length":944,"saved":false}
{"ts":1378557570384,"patch":[[{"diffs":[[0,"Pool"],[-1,".pool"],[0,"(dbN"]],"start1":263,"start2":263,"length1":13,"length2":8}]],"length":939,"saved":false}
{"ts":1378557597876,"patch":[[{"diffs":[[0,"};\n\nvar "],[-1,"connectionPool"],[1,"db"],[0," = requi"]],"start1":56,"start2":56,"length1":30,"length2":18},{"diffs":[[0,"onPool\")"],[1,"(dbName)"],[0,";\n\n//How"]],"start1":88,"start2":88,"length1":16,"length2":24},{"diffs":[[0,"    "],[-1,"var db = connectionPool(dbName);"],[0,"\n   "]],"start1":236,"start2":236,"length1":40,"length2":8}]],"length":903,"saved":false}
{"ts":1378557605469,"patch":[[{"diffs":[[0,"};\n\n"],[-1,"var db = require(\"./connectionPool\")(dbName);"],[0,"\n\n//"]],"start1":56,"start2":56,"length1":53,"length2":8},{"diffs":[[0,"Name) {\n    "],[1,"var db = require(\"./connectionPool\")(dbName);"],[0,"\n    \n    re"]],"start1":183,"start2":183,"length1":24,"length2":69}]],"length":903,"saved":false}
{"ts":1378557616493,"patch":[[{"diffs":[[0,"es\"\n};\n\n"],[-1,"\n\n"],[0,"//How sh"]],"start1":52,"start2":52,"length1":18,"length2":16}]],"length":901,"saved":false}
{"ts":1378557725359,"patch":[[{"diffs":[[0,"logic\n        },"],[1,"\n        \n        renameExercise: function() {\n            //TODO replace with real logic\n        },"],[0,"\n\n        switch"]],"start1":423,"start2":423,"length1":32,"length2":132}]],"length":1001,"saved":false}
{"ts":1378557918461,"patch":[[{"diffs":[[0,"es\"\n};\n\n"],[1,"var common = {\n    basicSelectExercises: \"SELECT rowid AS id, * FROM \" + tables.exercises\n}\n\n"],[0,"//How sh"]],"start1":52,"start2":52,"length1":16,"length2":109},{"diffs":[[0,"bName);\n"],[-1,"    "],[0,"\n"],[1,""],[0,"    retu"]],"start1":324,"start2":324,"length1":21,"length2":17},{"diffs":[[0,"\n        },\n"],[-1,"        "],[0,"\n"],[1,""],[0,"        rena"]],"start1":517,"start2":517,"length1":33,"length2":25},{"diffs":[[0,"\n        },\n"],[-1,"        "],[0,"\n"],[1,""],[0,"        getE"]],"start1":713,"start2":713,"length1":33,"length2":25},{"diffs":[[0,"    "],[-1,"//TODO replace with real logic"],[1,"db.each()"],[0,"\n   "]],"start1":772,"start2":772,"length1":38,"length2":17},{"diffs":[[0,"     },\n"],[-1,"        "],[0,"\n       "]],"start1":789,"start2":789,"length1":24,"length2":16}]],"length":1045,"saved":false}
{"ts":1378558013629,"patch":[[{"diffs":[[0,"es\"\n};\n\n"],[1,"var fields = {\n    exercises : {\n        name : \"name\"\n    }\n}\n\n"],[0,"var comm"]],"start1":52,"start2":52,"length1":16,"length2":80},{"diffs":[[0,"db.each("],[1,"basicSelectExercises + \" where \""],[0,")\n      "]],"start1":840,"start2":840,"length1":16,"length2":48},{"diffs":[[0,"ach("],[-1,"\"SELECT rowid AS id, * FROM \" + tables.e"],[1,"basicSelectE"],[0,"xerc"]],"start1":948,"start2":948,"length1":48,"length2":20}]],"length":1113,"saved":false}
{"ts":1378558494987,"patch":[[{"diffs":[[0,"        db.each("],[1,"common."],[0,"basicSelectExerc"]],"start1":832,"start2":832,"length1":32,"length2":39},{"diffs":[[0," where \""],[1," + fields.exercises.name + \" = \" + name, function(err, row) {\n                return row;\n            }"],[0,")\n      "]],"start1":879,"start2":879,"length1":16,"length2":119},{"diffs":[[0,"s: function() {\n"],[-1,""],[0,"            db.e"]],"start1":1026,"start2":1026,"length1":32,"length2":32},{"diffs":[[0,"db.each("],[1,"common."],[0,"basicSel"]],"start1":1054,"start2":1054,"length1":16,"length2":23}]],"length":1230,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378624036057,"patch":[[{"diffs":[[0,"xercises"],[-1," "],[0,": {\n    "]],"start1":80,"start2":80,"length1":17,"length2":16},{"diffs":[[0,"    name"],[-1," "],[0,": \"name\""]],"start1":96,"start2":96,"length1":17,"length2":16},{"diffs":[[0,"ion(name"],[1,", callBack"],[0,") {\n    "]],"start1":814,"start2":814,"length1":16,"length2":26},{"diffs":[[0,"me, "],[-1,"function(err, row) {\n                return row;\n            })"],[1,"callBack);"],[0,"\n   "]],"start1":932,"start2":932,"length1":71,"length2":18}]],"length":1185,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378654781597,"patch":[[{"diffs":[[0,"onPool\")"],[-1,"(dbName)"],[0,";\n\n    r"]],"start1":376,"start2":376,"length1":24,"length2":16}]],"length":1177,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378700991203,"patch":[[{"diffs":[[0,"rcise: function("],[1,"name, callBack"],[0,") {\n            "]],"start1":417,"start2":417,"length1":32,"length2":46},{"diffs":[[0,"    "],[-1,"//TODO replace with real logic"],[1,"db.run(\"INSERT INTO $tbl VALUES($name)\", {\n                $tbl: tables.exercises,\n                $name: fields.exercises.name\n            })"],[0,"\n   "]],"start1":459,"start2":459,"length1":38,"length2":150}]],"length":1303,"saved":false}
{"ts":1378701024941,"patch":[[{"diffs":[[0,"ction(name, call"],[-1,"B"],[1,"b"],[0,"ack) {\n         "]],"start1":427,"start2":427,"length1":33,"length2":33},{"diffs":[[0,"me\n            }"],[-1,")"],[1,", callback);"],[0,"\n        },\n\n   "]],"start1":588,"start2":588,"length1":33,"length2":44},{"diffs":[[0,"n(name, call"],[-1,"B"],[1,"b"],[0,"ack) {\n     "]],"start1":945,"start2":945,"length1":25,"length2":25},{"diffs":[[0,"call"],[-1,"B"],[1,"b"],[0,"ack)"]],"start1":1065,"start2":1065,"length1":9,"length2":9}]],"length":1314,"saved":false}
{"ts":1378707525374,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"//How should I pass options to a node module? from http://stackoverflow.com/a/6366131/532517\nmodule.exports = function(dbName) {\n    var db = require(\"./connectionPool\");\n\n    return {\n        insertExercise: function() {\n            //TODO replace with real logic\n        },\n"],[1,"var db = require(\"./connectionPool\");\n\nmodule.exports = {\n    insertExercise: function(name, callback) {\n        db.run(\"INSERT INTO $tbl VALUES($name)\", {\n            $tbl: tables.exercises,\n            $name: fields.exercises.name\n        }, callback);"],[0,"\n    "],[1,"},\n\n"],[0,"    "]],"start1":211,"start2":211,"length1":289,"length2":271},{"diffs":[[0,"e: function() {\n"],[-1,"    "],[0,"        //TODO r"]],"start1":495,"start2":495,"length1":36,"length2":32},{"diffs":[[0,"l logic\n    "],[-1,"    },\n\n    "],[1,"},\n\n"],[0,"    renameEx"]],"start1":542,"start2":542,"length1":36,"length2":28},{"diffs":[[0,"e: function() {\n"],[-1,"    "],[0,"        //TODO r"]],"start1":575,"start2":575,"length1":36,"length2":32},{"diffs":[[0,"l logic\n    "],[-1,"    },\n\n    "],[1,"},\n\n"],[0,"    switchEx"]],"start1":622,"start2":622,"length1":36,"length2":28},{"diffs":[[0,") {\n        "],[-1,"   "],[-1," "],[0,"//TODO repla"]],"start1":679,"start2":679,"length1":28,"length2":24},{"diffs":[[0," real logic\n"],[-1,"    "],[0,"    },\n\n    "]],"start1":710,"start2":710,"length1":28,"length2":24},{"diffs":[[0,"},\n\n    "],[-1," "],[-1,"   "],[0,"getExerc"]],"start1":726,"start2":726,"length1":20,"length2":16},{"diffs":[[0,"n(name, call"],[-1,"B"],[1,"b"],[0,"ack) {\n     "]],"start1":754,"start2":754,"length1":25,"length2":25},{"diffs":[[0,"back) {\n        "],[-1," "],[-1,"   "],[0,"db.each(common.b"]],"start1":766,"start2":766,"length1":36,"length2":32},{"diffs":[[0,"call"],[-1,"B"],[1,"b"],[0,"ack)"]],"start1":870,"start2":870,"length1":9,"length2":9},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"},\n\n    "],[-1,"   "],[-1," "],[0,"getA"]],"start1":881,"start2":881,"length1":24,"length2":16},{"diffs":[[0,"unction() {\n"],[-1,"    "],[0,"        db.e"]],"start1":911,"start2":911,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"console."]],"start1":993,"start2":993,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"})\n"],[-1,"        }\n"],[0,"    }\n}"],[-1,""],[0,""],[1,"\n"]],"start1":1075,"start2":1075,"length1":28,"length2":15}]],"length":1090,"saved":false}
{"ts":1378707652392,"patch":[[{"diffs":[[0,"\n}\n\nvar "],[-1,"db"],[1,"pool"],[0," = requi"]],"start1":211,"start2":211,"length1":18,"length2":20}]],"length":1092,"saved":false}
{"ts":1378707909854,"patch":[[{"diffs":[[0,"me, callback) {\n"],[1,"        var db = pool.getConnectionFromPool();\n"],[0,"        db.run(\""]],"start1":306,"start2":306,"length1":32,"length2":79}]],"length":1139,"saved":false}
{"ts":1378710393118,"patch":[[{"diffs":[[0,"me, callback) {\n"],[1,"        var db = pool.getConnectionFromPool();\n"],[0,"        db.each("]],"start1":807,"start2":807,"length1":32,"length2":79}]],"length":1186,"saved":false}
{"ts":1378710403432,"patch":[[{"diffs":[[0,"s: function() {\n"],[1,"        var db = pool.getConnectionFromPool();\n"],[0,"        db.each("]],"start1":1003,"start2":1003,"length1":32,"length2":79}]],"length":1233,"saved":false}
{"ts":1378710477546,"patch":[[{"diffs":[[0,"ool."],[-1,"getConnectionFromPool();"],[1,"runQuery("],[0,"\n   "]],"start1":1037,"start2":1037,"length1":32,"length2":17},{"diffs":[[0,"      })"],[1,");"],[0,"\n    }\n}"]],"start1":1201,"start2":1201,"length1":16,"length2":18}]],"length":1220,"saved":false}
{"ts":1378710509350,"patch":[[{"diffs":[[0,"ool."],[-1,"getConnectionFromPool();"],[1,"runQuery("],[0,"\n   "]],"start1":841,"start2":841,"length1":32,"length2":17},{"diffs":[[0," name, callback)"],[1,")"],[0,";\n    },\n\n    ge"]],"start1":944,"start2":944,"length1":32,"length2":33}]],"length":1206,"saved":false}
{"ts":1378721060105,"patch":[[{"diffs":[[0,"    "],[-1,"var db = pool.getConnectionFromPool();\n"],[1,"pool.pooled(function(db, callback) {\n    "],[0,"    "]],"start1":326,"start2":326,"length1":47,"length2":49},{"diffs":[[0,"        "],[1,"    "],[0,"$tbl: ta"]],"start1":426,"start2":426,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"$name: f"]],"start1":466,"start2":466,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"    "],[0,"}, callb"]],"start1":507,"start2":507,"length1":16,"length2":20},{"diffs":[[0,"lback);\n"],[1,"        });\n"],[0,"    },\n\n"]],"start1":525,"start2":525,"length1":16,"length2":28}]],"length":1232,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378886186265,"patch":[[{"diffs":[[0,"cises: {"],[1,"\n        name: \"name\"\n    }\n};\n\nvar common = {\n    basicSelectExercises: \"SELECT rowid AS id, * FROM \" + tables.exercises\n};\n\n"],[0,"var pool"]],"start1":83,"start2":83,"length1":16,"length2":142},{"diffs":[[0," $name: "],[-1,"fields.exercises."],[0,"name\n   "]],"start1":479,"start2":479,"length1":33,"length2":16},{"diffs":[[0,"});\n"],[-1,"        },\n\nname: \"name\"\n    }\n}\n\nvar common = {\n    basicSelectExercises: \"SELECT rowid AS id, * FROM \" + tables.exercises\n}\n\n//How should I pass options to a node module? from http://stackoverflow.com/a/6366131/532517\nmodule.exports = function(dbName) {\n    var db = require(\"./connectionPool\");\n\n    return {\n        insertExercise: function(name, callback) {\n        var db = pool.runQuery(\n        db.run(\"INSERT INTO $tbl VALUES($name)\", {\n                $tbl: tables.exercises,\n                $name: fields.exercises.name\n            }, callback));\n    "],[0,"    "]],"start1":526,"start2":526,"length1":570,"length2":8},{"diffs":[[0,") {\n"],[-1,"        var db = pool.runQuery(\n"],[0,"    "]],"start1":567,"start2":567,"length1":40,"length2":8},{"diffs":[[0,"gic\n    },\n\n"],[-1,"    "],[0,"    getExerc"]],"start1":778,"start2":778,"length1":28,"length2":24},{"diffs":[[0,"callback) {\n    "],[1,"    var db = pool.runQuery(\n"],[0,"        db.each("]],"start1":822,"start2":822,"length1":32,"length2":60},{"diffs":[[0,"ack)"],[1,")"],[0,";\n    "],[-1,"  "],[-1,"  "],[0,"},\n\n"],[-1,"    "],[0,"    "]],"start1":967,"start2":967,"length1":26,"length2":19},{"diffs":[[0,"unction() {\n    "],[1,"    var db = pool.runQuery(\n"],[0,"        db.each("]],"start1":1004,"start2":1004,"length1":32,"length2":60}]],"length":1217,"saved":false}
{"ts":1378886217403,"patch":[[{"diffs":[[0,"        "],[1,"("],[0,"pool.poo"]],"start1":324,"start2":324,"length1":16,"length2":17},{"diffs":[[0,"      })"],[1,"())"],[0,";\n    },"]],"start1":521,"start2":521,"length1":16,"length2":19}]],"length":1221,"saved":false}
{"ts":1378886230125,"patch":[[{"diffs":[[0,"        "],[-1,"("],[0,"pool.poo"]],"start1":324,"start2":324,"length1":17,"length2":16},{"diffs":[[0,"  })"],[-1,"())"],[0,";\n  "]],"start1":524,"start2":524,"length1":11,"length2":8}]],"length":1217,"saved":false}
{"ts":1378886795414,"patch":[[{"diffs":[[0,"       }"],[-1,","],[1,");\n           "],[0," callbac"]],"start1":497,"start2":497,"length1":17,"length2":30},{"diffs":[[0,"callback"],[1,"("],[0,");\n     "]],"start1":520,"start2":520,"length1":16,"length2":17},{"diffs":[[0,");\n        }"],[1,", callback"],[0,");\n    },\n\n "]],"start1":529,"start2":529,"length1":24,"length2":34}]],"length":1241,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378888205607,"patch":[[{"diffs":[[0,"\n    }\n}"],[1,";"],[0,"\n"]],"start1":1232,"start2":1232,"length1":9,"length2":10}]],"length":1242,"saved":false}
{"ts":1378888970248,"patch":[[{"diffs":[[0,"  }));\n    }\n};\n"],[1,"process.env.\ninsertExercise(\"bla\")"]],"start1":1226,"start2":1226,"length1":16,"length2":50}]],"length":1276,"saved":false}
{"ts":1378889662029,"patch":[[{"diffs":[[0,"\n};\n"],[-1,"process.env.\ninsertExercise(\"bla\")"],[1,"//TODO remove the following lines:\nprocess.env.NODE_ENV = \"test\";\nmodule.exports.insertExercise(\"bla\",function(){console.log(\"callback called\")});"]],"start1":1238,"start2":1238,"length1":38,"length2":150}]],"length":1388,"saved":false}
{"ts":1378889803240,"patch":[[{"diffs":[[1,"//TODO remove the following line:\nprocess.env.NODE_ENV = \"test\";\n\n"],[0,"//table "]],"start1":0,"start2":0,"length1":8,"length2":74},{"diffs":[[0,"line"],[-1,"s:\nprocess.env.NODE_ENV = \"test\";"],[1,":"],[0,"\nmod"]],"start1":1336,"start2":1336,"length1":41,"length2":9}]],"length":1422,"saved":false}
{"ts":1378890879266,"patch":[[{"diffs":[[0,"    }\n};"],[1,"\n\n// acquire connection - callback function is called\n// once a resource becomes available\npool.acquire(function(err, db) {\n    if (err) {\n        // handle error - this is generally the err from your\n        // factory.create function  \n    }\n    else {\n        db.query(\"select * from foo\", [], function() {\n            // return object back to pool\n            pool.release(db);\n        });\n    }\n});\n\n\n\n"],[0,"\n//TODO "]],"start1":1299,"start2":1299,"length1":16,"length2":423}]],"length":1829,"saved":false}
{"ts":1378892259239,"patch":[[{"diffs":[[0,"ool."],[-1,"pooled"],[1,"acquire"],[0,"(fun"]],"start1":399,"start2":399,"length1":14,"length2":15},{"diffs":[[0,"ion("],[-1,"db, callback"],[1,"err, db"],[0,") {\n"]],"start1":416,"start2":416,"length1":20,"length2":15},{"diffs":[[0,"};\n\n"],[-1,"// acquire connection - callback function is called\n// once a resource becomes available\npool.acquire(function(err, db) {\n    if (err) {\n        // handle error - this is generally the err from your\n        // factory.create function  \n    }\n    else {\n    "],[1,"\npool.acquire(function(err, db) {\n"],[0,"    "]],"start1":1301,"start2":1301,"length1":265,"length2":42},{"diffs":[[0,"        "],[-1,"   "],[-1," "],[0,"// retur"]],"start1":1390,"start2":1390,"length1":20,"length2":16},{"diffs":[[0,"ool\n        "],[-1,"    "],[0,"pool.release"]],"start1":1424,"start2":1424,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"});\n"],[-1,"    }\n"],[0,"});\n"]],"start1":1454,"start2":1454,"length1":22,"length2":12},{"diffs":[[0,"e(\"bla\","],[1," "],[0,"function"]],"start1":1532,"start2":1532,"length1":16,"length2":17},{"diffs":[[0,"nction()"],[-1,"{"],[1," {\n    "],[0,"console."]],"start1":1543,"start2":1543,"length1":17,"length2":23},{"diffs":[[0,"called\")"],[1,"\n"],[0,"});"]],"start1":1580,"start2":1580,"length1":11,"length2":12}]],"length":1592,"saved":false}
{"ts":1378893682988,"patch":[[{"diffs":[[0,"});\n        "],[1,"}, function (err, result) {\n            if(err){\n                console.log(err);\n            }\n        "],[0,"    callback"]],"start1":566,"start2":566,"length1":24,"length2":129},{"diffs":[[0,"       }"],[-1,", callback"],[0,");\n    }"]],"start1":700,"start2":700,"length1":26,"length2":16}]],"length":1687,"saved":false}
{"ts":1378893833863,"patch":[[{"diffs":[[0,"allback("],[1,"result.lastID"],[0,");\n     "]],"start1":688,"start2":688,"length1":16,"length2":29}]],"length":1700,"saved":false}
{"ts":1378893864099,"patch":[[{"diffs":[[0,"       c"],[-1,"onsole.log"],[1,"allback"],[0,"(err);\n "]],"start1":636,"start2":636,"length1":26,"length2":23},{"diffs":[[0,"allback("],[1,"null, "],[0,"result.l"]],"start1":685,"start2":685,"length1":16,"length2":22}]],"length":1703,"saved":false}
{"contributors":[],"silentsave":false,"ts":1378901105659,"patch":[[{"diffs":[[0,"xercises\n};\n"],[-1,"\n"],[0,"var pool = r"]],"start1":270,"start2":270,"length1":25,"length2":24},{"diffs":[[0,"Pool\");\n"],[-1,"\nmodule.exports"],[1,"var ret"],[0," = {\n   "]],"start1":314,"start2":314,"length1":31,"length2":23},{"diffs":[[0,"(err, db) {\n"],[1,"            if (err) {\n                callback(err);\n            }\n            else {\n    "],[0,"            "]],"start1":410,"start2":410,"length1":24,"length2":115},{"diffs":[[0,"        "],[1,"    "],[0,"$tbl: ta"]],"start1":576,"start2":576,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"$name: n"]],"start1":620,"start2":620,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1," });\n"],[0,"     "],[-1,"   "],[0,"}, f"]],"start1":651,"start2":651,"length1":21,"length2":13},{"diffs":[[0,"function"],[-1," "],[0,"(err, re"]],"start1":663,"start2":663,"length1":17,"length2":16},{"diffs":[[0,"    "],[1,"        "],[0,"if"],[1," "],[0,"(err)"],[1," "],[0,"{\n  "]],"start1":695,"start2":695,"length1":15,"length2":25},{"diffs":[[0,"                "],[1,"        "],[0,"callback(err);\n "]],"start1":718,"start2":718,"length1":32,"length2":40},{"diffs":[[0,"r);\n            "],[1,"       "],[1," "],[0,"}\n            ca"]],"start1":753,"start2":753,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"callback(null, result.lastID);"],[1,"        if (result) {\n                        console.log(\"result.lastID\");\n                        callback(null, result.lastID);\n                    }\n                    else {\n                        console.log(\"this\");\n                        callback(null, this.lastID);\n                    }\n\n                });\n                pool.release(db);\n            }"],[0,"\n   "]],"start1":787,"start2":787,"length1":38,"length2":376},{"diffs":[[0,"};\n\n"],[-1,"\npool.acquire(function(err, db) {\n    db.query(\"select * from foo\", [], function() {\n        // return object back to pool\n        pool.release(db);\n    });\n});\n\n\n"],[1,"module.exports = ret;"],[0,"\n\n//"]],"start1":1857,"start2":1857,"length1":171,"length2":29},{"diffs":[[0,"called\")"],[-1,""],[0,""],[1,";"],[0,"\n});"]],"start1":1994,"start2":1994,"length1":12,"length2":13}]],"length":2007,"saved":false}
{"ts":1378901167689,"patch":[[{"diffs":[[0,"     if (err) {\n"],[1,"                console.log(err);\n"],[0,"                "]],"start1":429,"start2":429,"length1":32,"length2":66}]],"length":2041,"saved":false}
{"ts":1378901265767,"patch":[[{"diffs":[[0,"og(\"this\");\n"],[1,"                        console.log(this.lastID);\n"],[0,"            "]],"start1":1038,"start2":1038,"length1":24,"length2":74}]],"length":2091,"saved":false}
{"ts":1378901320158,"patch":[[{"diffs":[[0,"    "],[-1,"if (result)"],[1,"else"],[0," {\n "]],"start1":829,"start2":829,"length1":19,"length2":12},{"diffs":[[0,"    "],[-1,"console.log(\"result.lastID\");\n"],[1,"if (result) {\n    "],[0,"    "]],"start1":860,"start2":860,"length1":38,"length2":26},{"diffs":[[0,");\n         "],[-1,"           }\n"],[0,"            "]],"start1":934,"start2":934,"length1":37,"length2":24},{"diffs":[[0,"    "],[-1,"     else {\n                        console.log(\"this\");\n                        console.log(this.lastID);\n                        callback(null, this.lastID);"],[1,"}"],[0,"\n   "]],"start1":957,"start2":957,"length1":167,"length2":9}]],"length":1901,"saved":false}
{"ts":1378901334789,"patch":[[{"diffs":[[0,"e {\n"],[-1,"                        if (result) {\n    "],[0,"    "]],"start1":836,"start2":836,"length1":50,"length2":8},{"diffs":[[0,"D);\n"],[-1,"                        }\n"],[0,"    "]],"start1":891,"start2":891,"length1":34,"length2":8}]],"length":1833,"saved":false}
{"ts":1378902375973,"patch":[[{"diffs":[[-1,"//TODO remove the following line:\nprocess.env.NODE_ENV = \"test\";\n\n"],[0,"//ta"]],"start1":0,"start2":0,"length1":70,"length2":4},{"diffs":[[0,"e names\n"],[1,""],[0,"var tabl"]],"start1":6,"start2":6,"length1":16,"length2":16},{"diffs":[[0,"      }\n"],[-1,"\n"],[0,"        "]],"start1":843,"start2":843,"length1":17,"length2":16},{"diffs":[[0,"  }\n};\n\n"],[1,""],[0,"module.e"]],"start1":1612,"start2":1612,"length1":16,"length2":16},{"diffs":[[0,"ret;"],[-1,"\n\n//TODO remove the following line:\nmodule.exports.insertExercise(\"bla\", function() {\n    console.log(\"callback called\");\n});"]],"start1":1637,"start2":1637,"length1":129,"length2":4}]],"length":1641,"saved":false}
{"contributors":[],"silentsave":false,"ts":1379023966819,"patch":[[{"diffs":[[0,"var ret = {\n"],[1,"    CreateTables: function(callback) {\n        pool.acquire(function(err, db) {\n            if (err) {\n                console.log(err);\n                callback(err);\n            }\n            else {\n                db.run(\"CREATE TABLE IF NOT EXISTS \" + tables.exercises, function(err, result) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else {\n                        callback(null, result.lastID);\n                    }\n                });\n                pool.release(db);\n            }\n        });\n    },\n\n"],[0,"    insertEx"]],"start1":256,"start2":256,"length1":24,"length2":606},{"diffs":[[0,"me, callback) {\n"],[-1,""],[0,"        pool.acq"]],"start1":881,"start2":881,"length1":32,"length2":32},{"diffs":[[0,"NTO "],[-1,"$tbl VALUES($name)\", {\n                    $tbl: tables.exercises,"],[1,"\" + tables.exercises + \" VALUES($name)\", {"],[0,"\n   "]],"start1":1091,"start2":1091,"length1":74,"length2":50}]],"length":2199,"saved":false}
{"contributors":[],"silentsave":false,"ts":1379026170196,"patch":[[{"diffs":[[0,"\n};\n"],[-1,"var pool = require(\"./connectionPool\");\nvar ret = {"],[1,"\nvar runQuery = function(queryFunction, callback) {\n    pool.acquire(function(err, db) {\n        if (err) {\n            console.log(err);\n            callback(err);\n        }\n        else {\n            queryFunction(db, function(err, result) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, result);\n                }\n            });\n            pool.release(db);\n        }\n    });\n}\n\nvar pool = require(\"./connectionPool\");\nvar ret = {\n    CreateTables: function(callback) {\n        runQuery(function(db, innerCallback) {\n            db.run(\"CREATE TABLE IF NOT EXISTS \" + tables.exercises, callback);\n        });\n    },\n\n"],[0,"\n   "]],"start1":212,"start2":212,"length1":59,"length2":722},{"diffs":[[0,"ack(null, result"],[-1,".lastID"],[0,""],[1,""],[0,");\n             "]],"start1":1377,"start2":1377,"length1":39,"length2":32}]],"length":2855,"saved":false}
{"ts":1379026245779,"patch":[[{"diffs":[[0,"db, "],[-1,"innerC"],[1,"c"],[0,"allb"]],"start1":809,"start2":809,"length1":14,"length2":9},{"diffs":[[0,"back);\n        }"],[1,", callback"],[0,");\n    },\n\n\n    "]],"start1":898,"start2":898,"length1":32,"length2":42}]],"length":2860,"saved":false}
{"ts":1379026478544,"patch":[[{"diffs":[[0,"ction(db"],[-1,", callback"],[0,") {\n    "]],"start1":803,"start2":803,"length1":26,"length2":16}]],"length":2850,"saved":false}
{"ts":1379026601940,"patch":[[{"diffs":[[0,"   });\n}"],[-1,""],[0,""],[1,";"],[0,"\n\nvar po"]],"start1":682,"start2":682,"length1":16,"length2":17},{"diffs":[[0,"},\n\n"],[-1,"\n    CreateTables: function(callback) {\n        pool.acquire(function(err, db) {\n            if (err) {\n                console.log(err);\n                callback(err);\n            }\n            else {\n                db.run(\"CREATE TABLE IF NOT EXISTS \" + tables.exercises, function(err, result) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else {\n                        callback(null, result);\n                    }\n                });\n                pool.release(db);\n            }\n        });\n    },\n\n"],[0,"    "]],"start1":922,"start2":922,"length1":584,"length2":8},{"diffs":[[0,") {\n        "],[-1,"pool.acquire"],[1,"runQuery"],[0,"(function(er"]],"start1":969,"start2":969,"length1":36,"length2":32},{"diffs":[[0,"ion("],[-1,"err, "],[0,"db) {\n"],[-1,"            if (err) {\n                console.log(err);\n                callback(err);\n            }\n            else {\n    "],[0,"    "]],"start1":995,"start2":995,"length1":144,"length2":14},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"$name: n"]],"start1":1088,"start2":1088,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"    }, function(err, result) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else {\n                        callback(null, result.lastID);\n                    }\n                });\n                pool.release(db);\n            }\n        });\n    },\n\n    "],[1,"}, callback);\n        }\n        });\n},\n\n"],[0,"dele"]],"start1":1116,"start2":1116,"length1":327,"length2":48},{"diffs":[[0," }));\n    }\n"],[1,"    "],[0,"};\n\nmodule.e"]],"start1":1821,"start2":1821,"length1":24,"length2":28}]],"length":1862,"saved":false}
{"ts":1379026656424,"patch":[[{"diffs":[[0,"ck);\n    },\n"],[1,"    "],[0,"\n    insertE"]],"start1":913,"start2":913,"length1":24,"length2":28},{"diffs":[[0,"   }"],[-1,"\n  "],[1,");\n"],[0,"    "],[-1,"  });\n"],[0,"},\n\n"],[1,"    "],[0,"dele"]],"start1":1143,"start2":1143,"length1":25,"length2":23},{"diffs":[[0,";\n    }\n"],[-1,"    "],[0,"};\n\nmodu"]],"start1":1827,"start2":1827,"length1":20,"length2":16}]],"length":1860,"saved":false}
{"ts":1379026748120,"patch":[[{"diffs":[[0,"ion("],[-1,") {\n        //TODO replace with real logic"],[1,"name, callback) {\n        runQuery(function(db) {\n            db.run(\"DELETE FROM \" + tables.exercises + \" WHERE \" + fields.name + \" = '$name'\", {\n                $name: name\n            }, callback);\n        });"],[0,"\n   "]],"start1":1183,"start2":1183,"length1":50,"length2":220}]],"length":2030,"saved":false}
{"ts":1379027296041,"patch":[[{"diffs":[[0,"e.log(err);\n"],[1,"            console.log(\"query was \" + JSON.stringify(queryFunction));\n"],[0,"            "]],"start1":342,"start2":342,"length1":24,"length2":95}]],"length":2101,"saved":false}
{"ts":1379027854269,"patch":[[{"diffs":[[0,"xercises"],[1," + \" (\" + fields.exercises.name + \")\""],[0,", callba"]],"start1":946,"start2":946,"length1":16,"length2":53},{"diffs":[[0," fields."],[1,"exercises."],[0,"name + \""]],"start1":1411,"start2":1411,"length1":16,"length2":26}]],"length":2148,"saved":false}
{"ts":1379028174945,"patch":[[{"diffs":[[0,"Pool\");\n"],[-1,"var"],[1,"module.exports =\n"],[0," ret = {"]],"start1":796,"start2":796,"length1":19,"length2":33},{"diffs":[[0,"};\n\n"],[-1,"module.exports = ret;"]],"start1":2137,"start2":2137,"length1":25,"length2":4}]],"length":2141,"saved":false}
{"ts":1379028209588,"patch":[[{"diffs":[[0," =\n "],[-1,"ret ="],[0," {\n "]],"start1":818,"start2":818,"length1":13,"length2":8}]],"length":2136,"saved":false}
